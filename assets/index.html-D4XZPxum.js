import{a,c as h,b as t,d as i,f as n,w as l,r as d,o as r,e as p}from"./app-ByJ3o_1w.js";const k={},g={id:"git-对象",tabindex:"-1"},c={class:"header-anchor",href:"#git-对象"};function o(b,s){const e=d("VPLink");return r(),h("div",null,[s[1]||(s[1]=t(`<h2 id="一些声明" tabindex="-1"><a class="header-anchor" href="#一些声明"><span>一些声明</span></a></h2><p>你理应对 Git 有基本的了解</p><blockquote><p><em>Git</em> is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.</p></blockquote><p>另外，你大可以使用比如 vscode 中极为方便的插件，比如自带的仓库管理器和 GitLen 插件，但我仍认为应掌握 Git 的基本用法 <s>（也许还有一些进阶用法）</s></p><h2 id="安装-git" tabindex="-1"><a class="header-anchor" href="#安装-git"><span>安装 git</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> update</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">sudo</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apt</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --version</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装成功将会输出 git 版本号</p><h2 id="git-换源-可选" tabindex="-1"><a class="header-anchor" href="#git-换源-可选"><span>git 换源（可选）</span></a></h2><p>请注意，示例提供的方法无法使用<code>git push</code>，<strong>只在云服务器上使用</strong></p><p><strong>本地建议开启虚拟网卡</strong></p><p>国内使用 git 时常发生抽风的现象</p><p>可全局更改使用镜像网站下载</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> config</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --global</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> url.</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">https://ghproxy.cc/https://github.com/</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">.insteadOf</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">https://github.com/</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>使用 <code>vi ~/.gitconfig</code> 命令即可查看当前的配置文件，看到以下配置：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">url </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">https://ghproxy.cc/https://github.com/</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        insteadOf</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> =</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://github.com/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>即配置成功</p><h2 id="本地连接-github-的-ssh-密钥" tabindex="-1"><a class="header-anchor" href="#本地连接-github-的-ssh-密钥"><span>本地连接 GitHub 的 SSH 密钥</span></a></h2><h3 id="生成-ssh-密钥" tabindex="-1"><a class="header-anchor" href="#生成-ssh-密钥"><span>生成 SSH 密钥</span></a></h3><p>如果你本地没有生成过 ssh 密钥，在终端执行以下命令：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ssh-keygen</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -t</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> rsa</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -b</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 4096</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -C</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">your_email@example.com</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>按照提示操作，通常直接按回车即可使用默认路径和文件名</p><h3 id="将公钥添加到-github" tabindex="-1"><a class="header-anchor" href="#将公钥添加到-github"><span>将公钥添加到 GitHub</span></a></h3><p>复制公钥内容到剪贴板：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">cat</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ~/.ssh/id_rsa.pub</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后登录 GitHub，进入 <strong>Settings</strong> &gt; <strong>SSH and GPG keys</strong>，点击 <strong>New SSH key</strong>，将复制的公钥粘贴到对应的框中，填写一个标题（随意），然后保存</p><h3 id="连接测试" tabindex="-1"><a class="header-anchor" href="#连接测试"><span>连接测试</span></a></h3><p>运行以下命令测试连接是否成功：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">ssh</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -T</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git@github.com</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果一切正常，你应该会看到一条欢迎信息。</p><h3 id="在受限网络环境下使用-ssh" tabindex="-1"><a class="header-anchor" href="#在受限网络环境下使用-ssh"><span>在受限网络环境下使用 SSH</span></a></h3><p>如你所处环境无法使用 22 端口</p><p>可以配置<code>~/.ssh/config</code>文件</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Host</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> github.com</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    HostName</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ssh.github.com</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    User</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> git</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    Port</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 443</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="将本地文件上传到-github" tabindex="-1"><a class="header-anchor" href="#将本地文件上传到-github"><span>将本地文件上传到 GitHub</span></a></h2><p>git 的原理是，你同时拥有一个本地仓库和一个远程仓库</p><p>请注意：<strong>本地仓库不等于本地文件夹</strong></p><p>对于最简单的情况，git 可以帮你同步这两个仓库</p><h3 id="创建一个-github-仓库" tabindex="-1"><a class="header-anchor" href="#创建一个-github-仓库"><span>创建一个 GitHub 仓库</span></a></h3><ul><li><p>登录你的 GitHub 账号。</p></li><li><p>点击右上角的 “+” 按钮，选择 “New repository”。</p></li><li><p>填写仓库名称和描述，选择是否公开或私有，然后点击 “Create repository”。</p></li></ul><h3 id="在本地初始化-git-仓库" tabindex="-1"><a class="header-anchor" href="#在本地初始化-git-仓库"><span>在本地初始化 Git 仓库</span></a></h3><p>打开终端或命令提示符，进入你想上传的文件夹，运行以下命令：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> init</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>此命令相当于你创建了一个本地仓库</p><h3 id="为本地仓库添加文件" tabindex="-1"><a class="header-anchor" href="#为本地仓库添加文件"><span>为本地仓库添加文件</span></a></h3><p>首先，我们一般会忽略本地的一些文件例如 node_modules</p><p>在项目根目录下创建<code>.gitignore</code>文件，并添加以下内容</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">node_modules/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这会告诉 git 忽略 node_modules 文件夹中的所有文件。</p><p>同理还有 .vscode 里的大部分等等</p><p>可以使用<code>!</code>来排除某些文件被忽略，例如：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">.vscode/*</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">!</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">.vscode/extensions.json</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>这意味着，git 会忽略 .vscode 文件夹中 <strong>除了</strong> extensions.json 之外的所有文件。</p><p>将你要上传的文件添加到 git 暂存区：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> .</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>.</code>表示添加当前目录下的所有文件，你也可以指定某个文件名</p><p>例如：<code>git add README.md</code> 代表只上传 README.md 文件（覆盖）</p><h3 id="提交更改" tabindex="-1"><a class="header-anchor" href="#提交更改"><span>提交更改</span></a></h3><p>提交你添加的文件：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> commit</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -m</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Your commit</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>尽可能规范你所有 commit 的格式，有助于版本管理和合作</strong></p><h3 id="关联远程仓库" tabindex="-1"><a class="header-anchor" href="#关联远程仓库"><span>关联远程仓库</span></a></h3><p>将本地仓库与 GitHub 仓库关联：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> remote</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> origin</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://github.com/你的用户名/仓库名.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>与远程仓库关联后，可以使用<code>git remote -v</code>查看当前关联的远程仓库</p><p>与远程仓库断开连接：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> remote</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> remove</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> origin</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="将本地仓库推送到-github" tabindex="-1"><a class="header-anchor" href="#将本地仓库推送到-github"><span>将本地仓库推送到 GitHub</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> push</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -u</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> origin</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> main</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其中 <code>main</code> 为你的分支名</p><p>完成后，你的文件就会出现在 GitHub 的仓库中。</p><h2 id="在本地仓库删除部分文件" tabindex="-1"><a class="header-anchor" href="#在本地仓库删除部分文件"><span>在本地仓库删除部分文件</span></a></h2><h3 id="预览将要删除的文件" tabindex="-1"><a class="header-anchor" href="#预览将要删除的文件"><span>预览将要删除的文件</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> rm</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -r</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -n</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --cached</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 文件/文件夹名称</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>加上 <code>-n</code> 这个参数，执行命令时，是不会删除任何文件，只是展示此命令要删除的文件列表预览</p><h3 id="确认无误后删除文件" tabindex="-1"><a class="header-anchor" href="#确认无误后删除文件"><span>确认无误后删除文件</span></a></h3><p>此操作不会删除本地的文件或文件夹</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> rm</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -r</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --cached</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 文件/文件夹名称</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>之后正常 commit &amp;&amp; push 即可</p><h2 id="更新本地仓库" tabindex="-1"><a class="header-anchor" href="#更新本地仓库"><span>更新本地仓库</span></a></h2><h3 id="在云服务器上拉取-github-仓库" tabindex="-1"><a class="header-anchor" href="#在云服务器上拉取-github-仓库"><span>在云服务器上拉取 GitHub 仓库</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> clone</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> https://github.com/用户名/仓库名.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><img src="https://image.honahec.cc/git-clone.png" alt="链接来源" style="zoom:50%;"><blockquote><p>一般建议使用 SSH 连接（需要配置 SSH 密钥）</p></blockquote><h3 id="从远程仓库更新本地仓库" tabindex="-1"><a class="header-anchor" href="#从远程仓库更新本地仓库"><span>从远程仓库更新本地仓库</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> pull</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="一些实用功能" tabindex="-1"><a class="header-anchor" href="#一些实用功能"><span>一些实用功能</span></a></h2><h3 id="修改-commit" tabindex="-1"><a class="header-anchor" href="#修改-commit"><span>修改 commit</span></a></h3><p>假设你更新了某个功能，但是忘记更新 README.md 了，又不想二次 commit 污染你的版本管理</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> xxx</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">git</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> commit</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --amend</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -m</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">xxx</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>此时，git 会自动为你创建一个分支提交形如</p><img src="https://image.honahec.cc/commit amend.png" style="zoom:150%;"><p>而后，若你本次修改与它的并行修改无冲突，直接同步即可，若存在冲突则需要简单 merge 一下（如果不简单就没必要这样了对吗）</p><p><strong>另外，你还可以 <code>git commit --amend --no-edit</code> 创建一个与它并行修改相同 commit 的提交</strong></p><h3 id="关于-merge" tabindex="-1"><a class="header-anchor" href="#关于-merge"><span>关于 merge</span></a></h3><p>在你 push 或者 pull 时，存在本地仓库与远程仓库的冲突，则需要选择保留哪些，在 vscode 中提供了可视化的选择方案，极为方便</p><p>处理所有冲突后进行同步，会创建一个 commit 形如 <code>Merge branch &#39;xxx&#39; of github.com:xxx/xxx</code></p><h2 id="一些偏门知识" tabindex="-1"><a class="header-anchor" href="#一些偏门知识"><span>一些偏门知识</span></a></h2>`,97)),i("h4",g,[i("a",c,[i("span",null,[n(e,{href:"./GitObject.md"},{default:l(()=>[...s[0]||(s[0]=[p("Git 对象",-1)])]),_:1})])])])])}const m=a(k,[["render",o]]),v=JSON.parse('{"path":"/blog/z85xxugf/","title":"Git 教程","lang":"zh-CN","frontmatter":{"title":"Git 教程","createTime":"2024/11/3 11:28:56","permalink":"/blog/z85xxugf/","tags":["项目管理"],"description":"一些声明 你理应对 Git 有基本的了解 Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency. ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Git 教程\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-11T11:54:35.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://blog.honahec.cc/blog/z85xxugf/"}],["meta",{"property":"og:site_name","content":"云朵角落"}],["meta",{"property":"og:title","content":"Git 教程"}],["meta",{"property":"og:description","content":"一些声明 你理应对 Git 有基本的了解 Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency. ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-11T11:54:35.000Z"}],["meta",{"property":"article:tag","content":"项目管理"}],["meta",{"property":"article:modified_time","content":"2025-10-11T11:54:35.000Z"}]]},"readingTime":{"minutes":4.68,"words":1404},"git":{"createdTime":1760183675000,"updatedTime":1760183675000,"changelog":[{"hash":"ec3563c3acade135fdc89eaed9b79d11b94986d2","time":1760183675000,"email":"honahec@gmail.com","author":"Honahec","message":"Reforges the blog powered by Vuepress Plume"}]},"autoDesc":true,"filePathRelative":"blog/Git.md","headers":[]}');export{m as comp,v as data};
