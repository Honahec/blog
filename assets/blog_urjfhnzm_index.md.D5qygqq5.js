import{_ as i,c as a,a3 as n,o as p}from"./chunks/framework.ohJJpums.js";const g=JSON.parse('{"title":"pnpm 教程","description":"","frontmatter":{"permalink":"/blog/urjfhnzm/"},"headers":[],"relativePath":"blog/urjfhnzm/index.md","filePath":"blog/pnpm.md","lastUpdated":1760074091000}'),l={name:"blog/urjfhnzm/index.md"};function h(t,s,e,k,r,d){return p(),a("div",null,s[0]||(s[0]=[n(`<h1 id="pnpm-教程" tabindex="-1">pnpm 教程 <a class="header-anchor" href="#pnpm-教程" aria-label="Permalink to &quot;pnpm 教程&quot;">​</a></h1><h2 id="与-npm、yarn-的比较" tabindex="-1">与 npm、yarn 的比较 <a class="header-anchor" href="#与-npm、yarn-的比较" aria-label="Permalink to &quot;与 npm、yarn 的比较&quot;">​</a></h2><p>pnpm 是一款磁盘空间高效的软件包管理器。</p><blockquote><p>Fast, disk space efficient package manager</p></blockquote><p>当使用 npm 或 yarn 时，如果你有 1000 个项目，并且所有项目都有一个相同的依赖包，那么， 你在硬盘上就需要保存 1000 份该相同依赖包的副本。</p><p>然而，如果是使用 pnpm，依赖包将被存放在一个统一的位置，因此以项目和依赖包的比例来看，使用 pnpm 将节省大量的硬盘空间，并且安装速度也能大大提高。</p><h2 id="pnpm-的优势" tabindex="-1">pnpm 的优势 <a class="header-anchor" href="#pnpm-的优势" aria-label="Permalink to &quot;pnpm 的优势&quot;">​</a></h2><ul><li><p><strong>快速</strong> —— pnpm 比替代方案快 2 倍</p></li><li><p><strong>高效</strong> —— node_modules 中的文件是从一个单一的可内容寻址的存储中软链接过来的</p></li><li><p><strong>支持 monorepos</strong> —— pnpm 内置支持了单仓多包</p></li><li><p><strong>严格</strong> —— pnpm 默认创建了一个非平铺的 node_modules，因此代码无法访问任意包</p></li></ul><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>首先你需要安装 nodejs</p><p>由于 apt 源的 nodejs 版本较低，推荐使用 nvm 进行安装和管理</p><blockquote><p>以下为 20250929 版本，需根据 <a href="https://nodejs.org/en/download/current" target="_blank" rel="noreferrer">nodejs 官网</a> 查看最新</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Download and install nvm:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bash</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># in lieu of restarting the shell</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">\\.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/.nvm/nvm.sh&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Download and install Node.js:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 24</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Verify the Node.js version:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Should print &quot;v24.9.0&quot;.</span></span></code></pre></div><p>在安装好 node 后，便可以使用 npm 了</p><p>若使用国内服务器，推荐使用淘宝镜像源</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> registry</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://registry.npmmirror.com</span></span></code></pre></div><p>安装 pnpm</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Download and install pnpm:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">corepack</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pnpm</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Verify pnpm version:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span></code></pre></div><p>pnpm 无需再次换源，默认使用 npm 的源</p><h2 id="常用命令" tabindex="-1">常用命令 <a class="header-anchor" href="#常用命令" aria-label="Permalink to &quot;常用命令&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 安装指定包</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 全局安装指定包</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remove</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 移除指定包</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remove</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 全局移除指定包</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upgrade</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 升级指定包</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upgrade</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 全局升级指定包</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 安装项目依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 运行开发环境</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 构建项目</span></span></code></pre></div><h2 id="更细节的事情" tabindex="-1">更细节的事情 <a class="header-anchor" href="#更细节的事情" aria-label="Permalink to &quot;更细节的事情&quot;">​</a></h2><p>pnpm 从命令行、环境变量和 .npmrc 文件中获取其配置。</p><p><code>pnpm config</code> 命令可用于更新和编辑 用户和全局 .npmrc 文件的内容。</p><p>四个相关文件分别为：</p><ul><li><p>每个项目的配置文件（<code>/path/to/your/project/.npmrc</code>）</p></li><li><p>每个工作区的配置文件（包含 <code>pnpm-workspace.yaml</code> 文件的目录）</p></li><li><p>每位用户的配置文件（<code>~/.npmrc</code>）</p></li><li><p>全局配置文件（<code>/etc/npmrc</code>）</p></li></ul><p>所有 .npmrc 文件都遵循 INI-formatted 列表，包含 key = value 参数。</p>`,27)]))}const F=i(l,[["render",h]]);export{g as __pageData,F as default};
